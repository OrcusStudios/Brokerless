%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: -1104 -1095 2204 -124 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2020 (64-Bit)
%%Title: petelevatedshort.eps
%%CreationDate: Sun Mar 30 15:07:39 2025
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2020 (64-Bit) Version 22.1.1.523
/EpsFile true def
%%BeginResource: procset wCorel22Dict 22.0 0
/wCorel22Dict 300 dict def wCorel22Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel22Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 2378 1568
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
-1103.99584 -1094.43487 2203.13140 -124.83468 @E
/$fm 1 def
 0 O 0 @g
0.1451 0.1882 0.2510  create_rgb_color set_solid_fill
-1103.99584 -124.83468 m
-1103.99584 -1094.43487 L
2203.13140 -1094.43487 L
2203.13140 -124.83468 L
-1103.99584 -124.83468 L
@c
F

@rax %Note: Object
-910.40145 -1012.08416 -307.72687 -207.18539 @E
/$fm 0 def
 0 O 0 @g
1.0000 0.6745 0.6745  create_rgb_color set_solid_fill
-852.59991 -1007.28539 m
-871.75672 -988.54214 -902.63169 -931.03427 -909.13096 -866.98998 C
-913.52580 -823.56775 -907.17761 -776.84031 -879.64441 -735.78161 C
-859.69928 -706.22079 -822.28762 -676.28324 -781.41883 -643.52778 C
-766.39408 -631.43320 -750.76753 -618.96359 -735.70535 -606.26721 C
-735.63080 -605.70425 -735.44258 -605.10217 -735.29178 -604.53921 C
-734.24041 -599.50517 -730.63389 -579.11046 -734.24041 -560.14186 C
-738.89830 -535.57427 -722.63424 -518.52189 -709.33720 -504.43654 C
-705.05433 -499.81606 -701.07307 -495.72113 -700.24706 -493.80520 C
-698.44309 -490.01216 -711.59074 -476.33868 -711.59074 -476.22671 C
-717.37597 -470.14129 -717.11150 -460.45106 -711.06520 -454.59099 C
-708.06047 -451.81191 -704.30485 -450.38438 -700.54724 -450.38438 C
-700.54724 -450.34696 L
-700.39644 -450.34696 -663.62400 -450.19616 -624.10819 -466.42450 C
-607.91868 -432.80589 -601.08378 -399.60113 -593.34661 -362.89843 C
-584.55666 -320.71720 -574.86472 -274.13915 -549.69874 -216.37191 C
-546.31757 -208.63474 -537.37852 -205.10277 -529.71619 -208.44652 C
-525.73493 -210.25077 -522.87931 -213.36718 -521.48920 -217.16192 C
-493.28107 -282.63231 L
-447.82894 -282.63231 L
-443.17276 -282.63231 -438.96444 -284.66022 -436.14794 -288.07852 C
-412.25896 -312.45619 L
-323.01269 -312.45619 L
-314.64312 -312.45619 -307.79802 -319.22192 -307.72687 -327.72359 C
-307.72687 -328.08246 L
-307.74416 -329.20923 -307.89099 -330.32948 -308.13902 -331.34995 C
-309.37861 -338.11200 -317.94123 -378.22819 -346.78857 -407.78929 C
-367.22211 -428.71124 -400.87786 -436.67376 -423.33959 -439.71732 C
-358.95940 -585.68570 -385.96535 -679.44047 -413.57452 -775.29118 C
-431.52917 -837.83140 -449.82142 -901.34532 -440.46850 -981.32117 C
-424.12961 -981.32117 L
-415.71609 -981.32117 -408.80324 -988.19490 -408.80324 -996.68324 C
-408.80324 -1005.17301 -415.60243 -1012.08416 -424.12961 -1012.08416 C
-453.84151 -1012.08416 L
-461.27849 -1012.08416 -467.73865 -1006.60054 -468.90340 -999.05017 C
-482.98876 -906.38419 -462.74343 -836.07109 -442.75918 -766.80765 C
-415.60243 -672.41395 -389.00891 -580.12611 -460.00006 -433.10778 C
-460.93946 -431.15443 -461.42759 -429.01455 -461.54126 -426.64762 C
-461.69065 -418.23383 -454.93002 -411.28384 -446.51509 -411.13446 C
-446.36570 -411.13446 -392.31354 -410.68346 -368.57509 -386.34321 C
-355.16466 -372.55805 -347.31411 -355.69361 -342.88186 -343.11061 C
-418.56973 -343.11061 L
-418.56973 -343.07178 L
-422.51386 -343.07178 -426.42028 -341.53200 -429.49956 -338.45272 C
-454.14000 -313.28504 L
-503.27150 -313.28504 L
-503.27150 -313.17307 L
-509.13156 -313.17307 -514.72857 -309.71764 -517.16863 -303.89499 C
-535.19953 -262.12564 L
-549.62249 -302.24183 -556.91008 -336.91153 -563.55846 -369.06350 C
-571.67178 -408.01635 -579.03420 -443.24901 -596.95143 -480.21449 C
-591.65461 -483.59395 -586.51002 -487.31244 -581.43855 -491.40737 C
-457.93162 -593.04643 -491.55165 -709.67792 -524.49364 -823.68454 C
-540.15591 -878.14857 -555.70791 -932.01591 -551.80120 -981.29679 C
-535.04872 -981.29679 L
-526.63351 -981.29679 -519.72236 -988.09597 -519.72236 -996.66057 C
-519.72236 -1005.11291 -526.55896 -1012.02406 -535.04872 -1012.02406 C
-565.32359 -1012.02406 L
-565.32359 -1011.94951 L
-572.68431 -1011.94951 -579.18331 -1006.57786 -580.38548 -998.95124 C
-589.69956 -939.56627 -571.82117 -877.77383 -553.79197 -815.20271 C
-523.70362 -710.88973 -492.90321 -604.10608 -600.85644 -515.23654 C
-623.84372 -496.34249 -651.60227 -487.77817 -671.92413 -484.02057 C
-669.78255 -491.23361 -669.29414 -499.04702 -672.59906 -506.37033 C
-675.64261 -513.13238 -681.16337 -518.91591 -687.32334 -525.37776 C
-695.73713 -534.24255 -706.02917 -545.13496 -704.30145 -554.18769 C
-700.92057 -572.06778 -702.42265 -590.73619 -703.99984 -601.85254 C
-699.34195 -604.18233 -691.68104 -606.77320 -680.18683 -607.22419 C
-675.67805 -607.37528 -667.79036 -602.71739 -660.01436 -598.17146 C
-651.11244 -592.91348 -642.43587 -587.73005 -632.85761 -586.07688 C
-613.13613 -582.54661 -597.06028 -590.99754 -589.69786 -630.40139 C
-589.51134 -630.92693 -589.43509 -631.30167 -589.36054 -631.75266 C
-580.23298 -682.98690 -613.13783 -705.29924 -660.01436 -736.99852 C
-666.47622 -741.39335 -673.38737 -746.01383 -680.44961 -751.00932 C
-679.24743 -751.72309 L
-657.19786 -765.77102 -642.24794 -784.47515 -632.85761 -805.66157 C
-623.69291 -826.32076 -620.08639 -849.15865 -620.46283 -872.29672 C
-620.98668 -910.38501 -632.25723 -949.75002 -647.50762 -981.14910 C
-635.48731 -981.14910 L
-627.07238 -981.14910 -620.20006 -987.94687 -620.20006 -996.51118 C
-620.20006 -1004.92639 -626.99754 -1011.87496 -635.48731 -1011.87496 C
-673.38737 -1011.87496 L
-676.20387 -1011.87496 -678.98466 -1011.08636 -681.53811 -1009.43320 C
-688.67490 -1004.92639 -690.77735 -995.46151 -686.27055 -988.28589 C
-667.41562 -958.49943 -651.44976 -914.21376 -650.81225 -871.95288 C
-650.54948 -852.87231 -653.36598 -834.39213 -660.65357 -817.97698 C
-667.63928 -802.20104 -678.83357 -788.15140 -695.58605 -777.56060 C
-699.22828 -775.19367 -703.17241 -773.05209 -707.34331 -771.02419 C
-721.50491 -782.40671 -736.07868 -795.44069 -750.12491 -810.95216 C
-807.82101 -874.54545 -742.19981 -976.23014 -735.02561 -986.89380 C
-732.99770 -989.56091 -731.68214 -992.86583 -731.68214 -996.54690 C
-731.68214 -1005.03666 -738.48132 -1011.94809 -747.00850 -1011.94809 C
-841.36507 -1011.94809 L
-845.75991 -1012.17345 -849.77858 -1010.33376 -852.59650 -1007.29020 C
-852.59991 -1007.28539 L
@c
-716.32318 -629.74743 m
-731.79893 -642.85625 -747.42548 -655.32728 -762.44995 -667.42186 C
-801.40139 -698.67354 -837.01049 -727.25953 -854.32592 -752.91222 C
-877.38945 -787.09521 -882.57288 -826.87238 -878.81698 -863.94643 C
-873.48274 -916.60989 -850.79565 -963.10687 -834.94517 -981.44277 C
-773.90731 -981.44277 L
-795.84151 -939.97531 -829.79915 -853.28277 -772.85424 -790.54923 C
-762.63676 -779.24324 -752.23417 -769.17628 -741.86561 -760.16098 C
-754.63682 -757.60724 -768.98494 -756.06775 -785.13704 -755.80328 C
-793.55083 -755.76586 -800.23635 -748.78016 -800.19921 -740.36494 C
-800.08724 -731.91402 -793.17439 -725.15367 -784.83543 -725.19109 C
-756.43937 -725.60466 -732.47528 -729.54850 -712.41647 -736.30885 C
-700.13537 -727.25613 -688.26444 -719.18164 -677.26006 -711.66869 C
-640.07235 -686.50101 -613.92954 -668.84797 -619.56397 -637.25754 C
-619.63852 -636.84369 -619.71477 -636.35698 -619.71477 -635.94340 C
-622.64494 -619.94211 -625.16126 -615.77263 -627.56391 -616.18450 C
-631.73339 -616.86113 -638.12041 -620.69301 -644.69282 -624.52346 C
-656.26186 -631.36006 -668.09367 -638.31033 -681.39043 -637.82050 C
-696.52885 -637.40835 -708.05877 -633.68986 -716.32318 -629.74602 C
-716.32318 -629.74743 L
@c
F

@rax %Note: Object
-240.45364 -789.48425 2009.53701 -400.12441 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
-121.72649 -505.39946 m
-81.88611 -505.39946 -45.62957 -536.81301 -45.62957 -596.03414 C
-45.62957 -658.69285 -81.93005 -687.09402 -121.72649 -687.09402 C
-153.34554 -687.09402 -176.74611 -664.21531 -187.54299 -631.56217 C
-187.54299 -774.02806 L
-187.54299 -779.03631 -183.78170 -783.41357 -178.15550 -783.41357 C
-168.07153 -783.41357 L
-166.25650 -783.41357 -164.99537 -784.67556 -164.99537 -786.40838 C
-164.99537 -788.22198 -166.25650 -789.48425 -168.07153 -789.48425 C
-217.90913 -789.48425 L
-217.90913 -523.82438 L
-217.90913 -518.81783 -221.66646 -514.44085 -227.29266 -514.44085 C
-237.37748 -514.44085 L
-239.19165 -514.44085 -240.45364 -513.17858 -240.45364 -511.44576 C
-240.45364 -509.63216 -239.19165 -508.36989 -237.37748 -508.36989 C
-187.53987 -508.36989 L
-187.53987 -561.16318 L
-177.06614 -529.15380 -153.90680 -505.40258 -121.72649 -505.40258 C
-121.72649 -505.39946 L
@c
-130.35912 -678.14334 m
-100.05647 -678.14334 -78.23594 -653.62961 -78.23594 -596.14129 C
-78.23594 -538.87833 -100.05647 -514.36120 -130.35912 -514.36120 C
-159.92419 -514.36120 -187.78252 -551.56365 -187.78252 -596.44942 C
-187.78252 -640.99446 -160.24677 -678.14334 -130.35912 -678.14334 C
-130.35912 -678.14334 L
@c
164.85222 -591.84992 m
164.85222 -594.87250 163.40967 -595.96271 159.83887 -595.96271 C
34.82646 -595.96271 L
34.82646 -640.25631 52.88485 -677.51376 95.67638 -677.51376 C
130.09776 -677.51376 148.79877 -652.31376 155.51206 -633.76214 C
156.30236 -631.70646 157.40391 -631.15654 158.58340 -631.15654 C
160.78819 -631.15654 161.64794 -632.80800 161.34123 -634.68850 C
158.25231 -646.66460 139.52551 -686.47266 91.35269 -686.47266 C
43.71534 -686.47266 2.13591 -658.35694 2.13591 -595.65940 C
2.13591 -538.26350 36.99071 -505.39776 85.68907 -505.39776 C
132.10299 -505.39776 164.84882 -535.58164 164.84882 -591.85162 C
164.85222 -591.84992 L
@c
34.90583 -590.21461 m
133.18044 -590.21150 L
132.85757 -536.70926 113.91477 -511.52202 85.66781 -511.52202 C
57.30265 -511.52202 36.31238 -538.92879 34.91065 -590.21461 C
34.90583 -590.21461 L
@c
333.71546 -645.94772 m
335.52595 -645.94772 336.62750 -647.29106 336.62750 -648.86315 C
336.62750 -649.81871 335.83436 -652.78431 334.09984 -656.30154 C
328.99918 -667.68576 316.28324 -686.48400 286.41231 -686.48400 C
250.05345 -686.48400 231.66085 -664.22353 231.66085 -636.37739 C
231.66085 -514.44085 L
212.19250 -514.44085 L
210.37861 -514.44085 209.11663 -513.17858 209.11663 -511.36809 C
209.11663 -509.63528 210.37861 -508.37301 212.19250 -508.37301 C
216.05868 -508.37301 L
237.32447 -508.37301 255.96057 -494.00561 255.96057 -458.57480 C
255.96057 -456.76091 257.22283 -455.49893 259.03332 -455.49893 C
260.76444 -455.49893 262.02671 -456.76091 262.02671 -458.57480 C
262.02671 -508.37301 L
323.47843 -508.37301 L
325.29061 -508.37301 326.55118 -509.63528 326.55118 -511.44917 C
326.55118 -513.18170 325.28891 -514.44397 323.47843 -514.44397 C
262.02671 -514.44397 L
262.02671 -636.38220 L
262.02671 -661.43310 274.39228 -676.91367 293.52643 -676.91367 C
311.45187 -676.91367 323.40047 -667.99701 330.03581 -650.99792 C
331.28504 -648.12472 331.60961 -645.94772 333.71546 -645.94772 C
333.71546 -645.94772 L
@c
632.77143 -591.84992 m
632.77143 -594.87250 631.33087 -595.96271 627.76006 -595.96271 C
502.74737 -595.96271 L
502.74737 -640.25631 520.80605 -677.51376 563.59559 -677.51376 C
598.01896 -677.51376 616.71997 -652.31376 623.43156 -633.76214 C
624.22328 -631.70646 625.32482 -631.15654 626.50431 -631.15654 C
628.70740 -631.15654 629.56913 -632.80800 629.26072 -634.68850 C
626.17351 -646.66460 607.44501 -686.47266 559.27389 -686.47266 C
511.63654 -686.47266 470.05682 -658.35694 470.05682 -595.65940 C
470.05682 -538.26350 504.91162 -505.39776 553.60857 -505.39776 C
600.02419 -505.39776 632.77002 -535.58164 632.77002 -591.85162 C
632.77143 -591.84992 L
@c
502.82702 -590.21461 m
601.10135 -590.21150 L
600.77849 -536.70926 581.83597 -511.52202 553.58731 -511.52202 C
525.22356 -511.52202 504.23357 -538.92879 502.83184 -590.21461 C
502.82702 -590.21461 L
@c
749.49874 -677.89843 m
751.31405 -677.89843 752.57150 -679.16069 752.57150 -680.89323 C
752.57150 -682.70882 751.30923 -683.97080 749.49534 -683.97080 C
680.18995 -683.97080 L
678.37436 -683.97080 677.11380 -682.70882 677.11380 -680.89323 C
677.11380 -679.16069 678.37436 -677.90013 680.18995 -677.90013 C
690.27279 -677.90013 L
695.89928 -677.90013 699.65830 -673.52287 699.65830 -668.51461 C
699.65830 -415.57890 L
699.65830 -410.57235 695.90069 -406.19537 690.27279 -406.19537 C
680.18995 -406.19537 L
678.37436 -406.19537 677.11380 -404.93310 677.11380 -403.20028 C
677.11380 -401.38668 678.37436 -400.12441 680.18995 -400.12441 C
730.02728 -400.12441 L
730.02728 -668.50809 L
730.02728 -673.51635 733.78772 -677.89191 739.41420 -677.89191 C
749.49874 -677.89191 L
749.49874 -677.89843 L
@c
954.32315 -591.84992 m
954.32315 -594.87250 952.88088 -595.96271 949.31178 -595.96271 C
824.29767 -595.96271 L
824.29767 -640.25631 842.35606 -677.51376 885.14759 -677.51376 C
919.57068 -677.51376 938.27169 -652.31376 944.98328 -633.76214 C
945.77357 -631.70646 946.87512 -631.15654 948.05603 -631.15654 C
950.25940 -631.15654 951.11915 -632.80800 950.81244 -634.68850 C
947.72523 -646.66460 928.99672 -686.47266 880.82561 -686.47266 C
833.18655 -686.47266 791.60712 -658.35694 791.60712 -595.65940 C
791.60712 -538.26350 826.46334 -505.39776 875.16028 -505.39776 C
921.57591 -505.39776 954.32003 -535.58164 954.32003 -591.85162 C
954.32315 -591.84992 L
@c
824.37874 -590.21461 m
922.65307 -590.21150 L
922.32879 -536.70926 903.38769 -511.52202 875.13902 -511.52202 C
846.77386 -511.52202 825.78359 -538.92879 824.38186 -590.21461 C
824.37874 -590.21461 L
@c
1178.44753 -508.36819 m
1180.25802 -508.36819 1181.51858 -509.61912 1181.51858 -511.43301 C
1181.51858 -513.16554 1180.25802 -514.42781 1178.44753 -514.42781 C
1171.62539 -514.42781 L
1165.46202 -514.42781 1161.48728 -517.47619 1159.15124 -522.92721 C
1090.00460 -683.96428 L
1082.88709 -683.96428 L
1008.22450 -523.73537 L
1005.32381 -517.54422 1001.64416 -514.42951 995.28151 -514.42951 C
989.40189 -514.42951 L
987.59140 -514.42951 986.33083 -513.16724 986.33083 -511.35676 C
986.33083 -509.62394 987.59140 -508.36167 989.40189 -508.36167 C
1062.14542 -508.36167 L
1063.96072 -508.36167 1065.22129 -509.62394 1065.22129 -511.43783 C
1065.22129 -513.17206 1063.96072 -514.43263 1062.14542 -514.43263 C
1047.25701 -514.43263 L
1042.79868 -514.43263 1040.36202 -516.71055 1040.36202 -519.93581 C
1040.36202 -520.86529 1040.75121 -522.13890 1041.22998 -523.42696 C
1098.22819 -649.83146 L
1152.20891 -523.73849 L
1152.99411 -522.12586 1153.07688 -520.84573 1153.07688 -519.90661 C
1153.07688 -516.06482 1150.02709 -514.43575 1145.87036 -514.43575 C
1131.81279 -514.43575 L
1130.00230 -514.43575 1128.74145 -513.17518 1128.74145 -511.36469 C
1128.74145 -509.63216 1130.00230 -508.36989 1131.81761 -508.36989 C
1178.44753 -508.36989 L
1178.44753 -508.36819 L
@c
1402.64476 -677.89843 m
1404.46176 -677.89843 1405.72715 -679.15899 1405.72715 -680.89153 C
1405.72715 -682.70712 1404.46176 -683.96769 1402.64476 -683.96769 C
1352.80573 -683.96769 L
1352.80573 -631.56529 L
1342.01707 -664.21531 1318.60630 -687.09543 1286.99320 -687.09543 C
1247.19647 -687.09543 1210.89798 -658.69455 1210.89798 -596.03584 C
1210.89798 -536.81471 1247.15764 -505.40088 1286.99802 -505.40088 C
1319.17408 -505.40088 1342.34164 -529.15238 1352.80573 -561.16148 C
1352.80573 -508.36819 L
1383.17641 -508.36819 L
1383.17641 -668.51150 L
1383.17641 -673.51805 1386.94025 -677.89502 1392.56986 -677.89502 C
1402.64476 -677.89502 L
1402.64476 -677.89843 L
@c
1295.63376 -678.13852 m
1325.51773 -678.13852 1353.04894 -640.98652 1353.04894 -596.43978 C
1353.04894 -551.55543 1325.19317 -514.35156 1295.63376 -514.35156 C
1265.32970 -514.35156 1243.51058 -538.87011 1243.51058 -596.13307 C
1243.51058 -653.62139 1265.32970 -678.13852 1295.63376 -678.13852 C
@c
1563.48539 -645.94772 m
1565.30239 -645.94772 1566.40564 -647.29106 1566.40564 -648.86315 C
1566.40564 -649.81871 1565.61080 -652.78431 1563.87487 -656.30154 C
1558.78044 -667.68576 1546.06139 -686.48400 1516.19357 -686.48400 C
1479.83641 -686.48400 1461.43899 -664.22353 1461.43899 -636.37739 C
1461.43899 -514.44085 L
1441.97065 -514.44085 L
1440.15364 -514.44085 1438.88825 -513.17858 1438.88825 -511.36809 C
1438.88825 -509.63528 1440.15364 -508.37301 1441.97065 -508.37301 C
1445.83172 -508.37301 L
1467.10091 -508.37301 1485.74183 -494.00561 1485.74183 -458.57480 C
1485.74183 -456.76091 1486.99106 -455.49893 1488.80806 -455.49893 C
1490.54400 -455.49893 1491.80967 -456.76091 1491.80967 -458.57480 C
1491.80967 -508.37301 L
1553.24835 -508.37301 L
1555.06535 -508.37301 1556.33074 -509.63528 1556.33074 -511.44917 C
1556.33074 -513.18170 1555.06535 -514.44397 1553.24835 -514.44397 C
1491.80967 -514.44397 L
1491.80967 -636.38220 L
1491.80967 -661.43310 1504.17184 -676.91367 1523.29946 -676.91367 C
1541.22661 -676.91367 1553.18343 -667.99701 1559.81877 -650.99792 C
1561.06800 -648.12472 1561.39257 -645.94772 1563.48539 -645.94772 C
1563.48539 -645.94772 L
@c
1764.46346 -591.84992 m
1764.46346 -594.87250 1763.01950 -595.96271 1759.45039 -595.96271 C
1634.43118 -595.96271 L
1634.43118 -640.25631 1652.48816 -677.51376 1695.28592 -677.51376 C
1729.71241 -677.51376 1748.40208 -652.31376 1755.11849 -633.76214 C
1755.91361 -631.70646 1757.01685 -631.15654 1758.18472 -631.15654 C
1760.39121 -631.15654 1761.25096 -632.80800 1760.94283 -634.68850 C
1757.86044 -646.66460 1739.13846 -686.47266 1690.97046 -686.47266 C
1643.32176 -686.47266 1601.74063 -658.35694 1601.74063 -595.65940 C
1601.74063 -538.26350 1636.60507 -505.39776 1685.29209 -505.39776 C
1731.70800 -505.39776 1764.46346 -535.58164 1764.46346 -591.85162 C
1764.46346 -591.84992 L
@c
1634.51225 -590.21461 m
1732.79480 -590.21150 L
1732.47052 -536.70926 1713.52120 -511.52202 1685.27594 -511.52202 C
1656.91701 -511.52202 1635.92391 -538.92879 1634.51225 -590.21461 C
1634.51225 -590.21461 L
@c
2006.45461 -677.89843 m
2008.27162 -677.89843 2009.53701 -679.16069 2009.53701 -680.89323 C
2009.53701 -682.70712 2008.27162 -683.96939 2006.45461 -683.96939 C
1956.61559 -683.96939 L
1956.61559 -631.56529 L
1945.82693 -664.21701 1922.41644 -687.09543 1890.79654 -687.09543 C
1851.01625 -687.09543 1814.70784 -658.69625 1814.70784 -596.03584 C
1814.70784 -536.81471 1850.96750 -505.40088 1890.81269 -505.40088 C
1922.98422 -505.40088 1946.15150 -529.15238 1956.61559 -561.16148 C
1956.61559 -415.58060 L
1956.61559 -410.57405 1952.86791 -406.19679 1947.23830 -406.19679 C
1937.14724 -406.19679 L
1935.33024 -406.19679 1934.08101 -404.93622 1934.08101 -403.20198 C
1934.08101 -401.38809 1935.33024 -400.12611 1937.14724 -400.12611 C
1986.98627 -400.12611 L
1986.98627 -668.51150 L
1986.98627 -673.51805 1990.75011 -677.89502 1996.36356 -677.89502 C
2006.45461 -677.89502 L
2006.45461 -677.89843 L
@c
1899.44362 -678.14022 m
1929.32759 -678.14022 1956.85909 -640.98794 1956.85909 -596.44120 C
1956.85909 -551.55543 1929.00302 -514.35326 1899.44362 -514.35326 C
1869.13814 -514.35326 1847.31732 -538.87011 1847.31732 -596.13307 C
1847.31732 -653.62139 1869.13814 -678.14022 1899.44362 -678.14022 C
@c
F

@rax %Note: Object
-15.45364 -907.76069 1784.53191 -856.55055 @E
/$fm 1 def
 0 O 0 @g
1.0000 0.6745 0.6745  create_rgb_color set_solid_fill
-10.68406 -901.71751 m
-15.45364 -901.71751 L
-15.45364 -857.18693 L
4.26614 -857.18693 L
10.94542 -857.18693 15.39865 -861.64016 15.39865 -867.68334 C
15.39865 -876.27118 L
15.39865 -882.31436 10.94542 -886.76759 4.26614 -886.76759 C
-10.68406 -886.76759 L
-10.68406 -901.71751 L
@c
4.26614 -861.32183 m
-10.68406 -861.32183 L
-10.68406 -882.63241 L
4.26614 -882.63241 L
7.76381 -882.63241 10.62737 -879.76998 10.62737 -876.27118 C
10.62737 -867.68334 L
10.62737 -864.18454 7.76381 -861.32183 4.26614 -861.32183 C
@c
44.92403 -890.26639 m
41.10661 -901.71751 L
36.33534 -901.71751 L
36.33534 -899.80866 L
51.92135 -857.18693 L
57.32844 -857.18693 L
72.91446 -899.80866 L
72.91446 -901.71751 L
68.14318 -901.71751 L
64.32576 -890.26639 L
44.92403 -890.26639 L
44.92403 -890.26639 L
@c
62.73581 -886.13150 m
54.78321 -862.91206 L
54.46517 -862.91206 L
46.51398 -886.13150 L
62.73581 -886.13150 L
@c
123.74957 -895.67348 m
118.97972 -895.67348 L
105.93780 -864.50258 L
105.61975 -864.50258 L
101.16624 -901.71751 L
96.39666 -901.71751 L
96.39666 -899.80866 L
102.12180 -857.18693 L
107.84551 -857.18693 L
121.20576 -889.31197 L
121.52381 -889.31197 L
134.88236 -857.18693 L
140.60750 -857.18693 L
146.33291 -899.80866 L
146.33291 -901.71751 L
141.56135 -901.71751 L
137.10983 -864.50258 L
136.79008 -864.50258 L
123.74957 -895.67348 L
@c
179.99348 -901.71751 m
175.22220 -901.71751 L
175.22220 -857.18693 L
194.94369 -857.18693 L
201.62296 -857.18693 206.07477 -861.64016 206.07477 -867.68334 C
206.07477 -876.27118 L
206.07477 -882.31436 201.62296 -886.76759 194.94369 -886.76759 C
179.99348 -886.76759 L
179.99348 -901.71751 L
@c
194.94369 -861.32183 m
179.99348 -861.32183 L
179.99348 -882.63241 L
194.94369 -882.63241 L
198.44135 -882.63241 201.30491 -879.76998 201.30491 -876.27118 C
201.30491 -867.68334 L
201.30491 -864.18454 198.44135 -861.32183 194.94369 -861.32183 C
@c
234.32797 -901.71751 m
234.32797 -857.18693 L
263.27254 -857.18693 L
263.27254 -860.04935 L
262.00063 -861.32183 L
239.09953 -861.32183 L
239.09953 -876.90728 L
257.22935 -876.90728 L
257.22935 -881.04246 L
239.09953 -881.04246 L
239.09953 -897.58233 L
263.27254 -897.58233 L
263.27254 -901.71751 L
234.32797 -901.71751 L
@c
295.02369 -901.71751 m
290.25411 -901.71751 L
290.25411 -857.18693 L
309.97389 -857.18693 L
316.65317 -857.18693 321.10639 -861.64016 321.10639 -867.68334 C
321.10639 -873.72652 L
321.10639 -882.63241 312.51770 -883.90488 312.51770 -883.90488 C
322.37830 -899.80866 L
322.37830 -901.71751 L
317.60702 -901.71751 L
307.74643 -884.22321 L
295.02369 -884.22321 L
295.02369 -901.71751 L
@c
309.97389 -861.32183 m
295.02369 -861.32183 L
295.02369 -880.08803 L
309.97389 -880.08803 L
313.47326 -880.08803 316.33512 -877.22532 316.33512 -873.72652 C
316.33512 -867.68334 L
316.33512 -864.18454 313.47326 -861.32183 309.97389 -861.32183 C
309.97389 -861.32183 L
@c
397.65090 -888.04035 m
397.65090 -901.71751 L
392.87962 -901.71751 L
392.87962 -888.04035 L
377.92970 -859.09550 L
377.92970 -857.18693 L
382.70098 -857.18693 L
395.10567 -882.95046 L
395.42343 -882.95046 L
407.82983 -857.18693 L
412.60110 -857.18693 L
412.60110 -859.09550 L
397.65090 -888.04035 L
@c
437.03546 -891.85720 m
437.03546 -867.04696 L
437.03546 -861.00378 441.48869 -856.55055 448.16797 -856.55055 C
459.30076 -856.55055 L
465.98003 -856.55055 470.43326 -861.00378 470.43326 -867.04696 C
470.43326 -891.85720 L
470.43326 -897.90038 465.98003 -902.35304 459.30076 -902.35304 C
448.16797 -902.35304 L
441.48869 -902.35304 437.03546 -897.90038 437.03546 -891.85720 C
@c
465.66369 -891.85720 m
465.66369 -867.04696 L
465.66369 -863.54816 462.80013 -860.68573 459.30076 -860.68573 C
448.16797 -860.68573 L
444.67030 -860.68573 441.80674 -863.54816 441.80674 -867.04696 C
441.80674 -891.85720 L
441.80674 -895.35543 444.67030 -898.21871 448.16797 -898.21871 C
459.30076 -898.21871 L
462.80013 -898.21871 465.66369 -895.35543 465.66369 -891.85720 C
@c
521.27008 -902.35304 m
511.72724 -902.35304 L
505.04797 -902.35304 500.59474 -897.90038 500.59474 -891.85720 C
500.59474 -857.18693 L
505.36602 -857.18693 L
505.36602 -891.85720 L
505.36602 -895.35543 508.22957 -898.21871 511.72724 -898.21871 C
521.27008 -898.21871 L
524.76945 -898.21871 527.63131 -895.35543 527.63131 -891.85720 C
527.63131 -857.18693 L
532.40258 -857.18693 L
532.40258 -891.85720 L
532.40258 -897.90038 527.94935 -902.35304 521.27008 -902.35304 C
@c
568.60724 -901.71751 m
563.83597 -901.71751 L
563.83597 -857.18693 L
583.55717 -857.18693 L
590.23644 -857.18693 594.68825 -861.64016 594.68825 -867.68334 C
594.68825 -873.72652 L
594.68825 -882.63241 586.10098 -883.90488 586.10098 -883.90488 C
595.96186 -899.80866 L
595.96186 -901.71751 L
591.19058 -901.71751 L
581.32970 -884.22321 L
568.60724 -884.22321 L
568.60724 -901.71751 L
@c
583.55717 -861.32183 m
568.60724 -861.32183 L
568.60724 -880.08803 L
583.55717 -880.08803 L
587.05512 -880.08803 589.91839 -877.22532 589.91839 -873.72652 C
589.91839 -867.68334 L
589.91839 -864.18454 587.05512 -861.32183 583.55717 -861.32183 C
583.55717 -861.32183 L
@c
662.96353 -901.71751 m
658.19225 -901.71751 L
658.19225 -857.18693 L
677.91203 -857.18693 L
684.59301 -857.18693 689.04482 -861.64016 689.04482 -867.68334 C
689.04482 -876.27118 L
689.04482 -882.31436 684.59301 -886.76759 677.91203 -886.76759 C
662.96353 -886.76759 L
662.96353 -901.71751 L
@c
677.91203 -861.32183 m
662.96353 -861.32183 L
662.96353 -882.63241 L
677.91203 -882.63241 L
681.41140 -882.63241 684.27326 -879.76998 684.27326 -876.27118 C
684.27326 -867.68334 L
684.27326 -864.18454 681.41140 -861.32183 677.91203 -861.32183 C
@c
717.29802 -901.71751 m
717.29802 -857.18693 L
746.24258 -857.18693 L
746.24258 -860.04935 L
744.97068 -861.32183 L
722.06957 -861.32183 L
722.06957 -876.90728 L
740.19940 -876.90728 L
740.19940 -881.04246 L
722.06957 -881.04246 L
722.06957 -897.58233 L
746.24258 -897.58233 L
746.24258 -901.71751 L
717.29802 -901.71751 L
717.29802 -901.71751 L
@c
786.26466 -861.32183 m
786.26466 -901.71751 L
781.49339 -901.71751 L
781.49339 -861.32183 L
767.49704 -861.32183 L
767.49704 -857.18693 L
800.25902 -857.18693 L
800.25902 -860.04935 L
798.98712 -861.32183 L
786.26466 -861.32183 L
@c
821.51518 -895.67348 m
826.28504 -895.67348 L
826.28504 -899.80866 L
823.74123 -907.76069 L
821.51518 -907.76069 L
821.51518 -895.67348 L
@c
889.15294 -901.71751 m
889.15294 -857.18693 L
918.09751 -857.18693 L
918.09751 -860.04935 L
916.82561 -861.32183 L
893.92450 -861.32183 L
893.92450 -876.90728 L
912.05433 -876.90728 L
912.05433 -881.04246 L
893.92450 -881.04246 L
893.92450 -897.58233 L
918.09751 -897.58233 L
918.09751 -901.71751 L
889.15294 -901.71751 L
@c
945.07739 -857.18693 m
949.84894 -857.18693 L
949.84894 -897.58233 L
973.70561 -897.58233 L
973.70561 -901.71751 L
945.07739 -901.71751 L
945.07739 -857.18693 L
@c
999.41357 -901.71751 m
999.41357 -857.18693 L
1028.35814 -857.18693 L
1028.35814 -860.04935 L
1027.08624 -861.32183 L
1004.18485 -861.32183 L
1004.18485 -876.90728 L
1022.31468 -876.90728 L
1022.31468 -881.04246 L
1004.18485 -881.04246 L
1004.18485 -897.58233 L
1028.35814 -897.58233 L
1028.35814 -901.71751 L
999.41357 -901.71751 L
@c
1067.42438 -895.99153 m
1067.74243 -895.99153 L
1080.46488 -857.18693 L
1085.23644 -857.18693 L
1085.23644 -859.09550 L
1070.60598 -901.71751 L
1064.56252 -901.71751 L
1049.93065 -859.09550 L
1049.93065 -857.18693 L
1054.70192 -857.18693 L
1067.42438 -895.99153 L
@c
1112.53578 -890.26639 m
1108.71836 -901.71751 L
1103.94709 -901.71751 L
1103.94709 -899.80866 L
1119.53310 -857.18693 L
1124.94047 -857.18693 L
1140.52649 -899.80866 L
1140.52649 -901.71751 L
1135.75493 -901.71751 L
1131.93751 -890.26639 L
1112.53578 -890.26639 L
1112.53578 -890.26639 L
@c
1130.34784 -886.13150 m
1122.39666 -862.91206 L
1122.07861 -862.91206 L
1114.12573 -886.13150 L
1130.34784 -886.13150 L
@c
1179.59272 -861.32183 m
1179.59272 -901.71751 L
1174.82315 -901.71751 L
1174.82315 -861.32183 L
1160.82709 -861.32183 L
1160.82709 -857.18693 L
1193.58907 -857.18693 L
1193.58907 -860.04935 L
1192.31546 -861.32183 L
1179.59272 -861.32183 L
@c
1219.29676 -901.71751 m
1219.29676 -857.18693 L
1248.24132 -857.18693 L
1248.24132 -860.04935 L
1246.96942 -861.32183 L
1224.06831 -861.32183 L
1224.06831 -876.90728 L
1242.19814 -876.90728 L
1242.19814 -881.04246 L
1224.06831 -881.04246 L
1224.06831 -897.58233 L
1248.24132 -897.58233 L
1248.24132 -901.71751 L
1219.29676 -901.71751 L
@c
1321.28334 -861.32183 m
1321.28334 -901.71751 L
1316.51518 -901.71751 L
1316.51518 -861.32183 L
1302.52082 -861.32183 L
1302.52082 -857.18693 L
1335.28422 -857.18693 L
1335.28422 -860.04935 L
1334.00268 -861.32183 L
1321.28334 -861.32183 L
@c
1387.70277 -857.18693 m
1392.47235 -857.18693 L
1392.47235 -901.71751 L
1387.70277 -901.71751 L
1387.70277 -881.04246 L
1365.76828 -881.04246 L
1365.76828 -901.71751 L
1360.98255 -901.71751 L
1360.98255 -857.18693 L
1365.76828 -857.18693 L
1365.76828 -876.90728 L
1387.70277 -876.90728 L
1387.70277 -857.18693 L
@c
1423.91367 -901.71751 m
1423.91367 -857.18693 L
1452.85654 -857.18693 L
1452.85654 -860.04935 L
1451.59115 -861.32183 L
1428.68353 -861.32183 L
1428.68353 -876.90728 L
1446.82157 -876.90728 L
1446.82157 -881.04246 L
1428.68353 -881.04246 L
1428.68353 -897.58233 L
1452.85654 -897.58233 L
1452.85654 -901.71751 L
1423.91367 -901.71751 L
@c
1484.60627 -901.71751 m
1479.83641 -901.71751 L
1479.83641 -857.18693 L
1484.60627 -857.18693 L
1484.60627 -901.71751 L
@c
1520.81745 -901.71751 m
1516.04759 -901.71751 L
1516.04759 -857.18693 L
1535.75915 -857.18693 L
1542.44353 -857.18693 1546.88854 -861.64016 1546.88854 -867.68334 C
1546.88854 -873.72652 L
1546.88854 -882.63241 1538.30636 -883.90488 1538.30636 -883.90488 C
1548.17036 -899.80866 L
1548.17036 -901.71751 L
1543.40050 -901.71751 L
1533.53650 -884.22321 L
1520.81745 -884.22321 L
1520.81745 -901.71751 L
@c
1535.75915 -861.32183 m
1520.81745 -861.32183 L
1520.81745 -880.08803 L
1535.75915 -880.08803 L
1539.26362 -880.08803 1542.11896 -877.22532 1542.11896 -873.72652 C
1542.11896 -867.68334 L
1542.11896 -864.18454 1539.26362 -861.32183 1535.75915 -861.32183 C
1535.75915 -861.32183 L
@c
1610.40416 -857.18693 m
1615.17373 -857.18693 L
1615.17373 -897.58233 L
1639.02246 -897.58233 L
1639.02246 -901.71751 L
1610.40416 -901.71751 L
1610.40416 -857.18693 L
@c
1669.50652 -901.71751 m
1664.73694 -901.71751 L
1664.73694 -857.18693 L
1669.50652 -857.18693 L
1669.50652 -901.71751 L
@c
1705.71770 -901.71751 m
1700.93169 -901.71751 L
1700.93169 -857.18693 L
1729.89099 -857.18693 L
1729.89099 -860.04935 L
1728.60917 -861.32183 L
1705.71770 -861.32183 L
1705.71770 -879.13361 L
1723.51502 -879.13361 L
1723.51502 -883.26879 L
1705.71770 -883.26879 L
1705.71770 -901.71751 L
@c
1755.58904 -901.71751 m
1755.58904 -857.18693 L
1784.53191 -857.18693 L
1784.53191 -860.04935 L
1783.26652 -861.32183 L
1760.35890 -861.32183 L
1760.35890 -876.90728 L
1778.49666 -876.90728 L
1778.49666 -881.04246 L
1760.35890 -881.04246 L
1760.35890 -897.58233 L
1784.53191 -897.58233 L
1784.53191 -901.71751 L
1755.58904 -901.71751 L
1755.58904 -901.71751 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel22Dict 22.0 0
%%EOF
