<%- include('../partials/layout.ejs') %>

<div class="container py-4">
    <div id="listing-form-container">
        <!-- Progress Indicator -->
        <div class="form-progress mb-4">
            <div class="form-progress-bar" data-current-step="1">
                <div class="form-progress-step active">1</div>
                <div class="form-progress-step">2</div>
                <div class="form-progress-step">3</div>
                <div class="form-progress-step">4</div>
            </div>
            <div class="form-progress-labels">
                <div class="form-progress-label active">Location</div>
                <div class="form-progress-label">Details</div>
                <div class="form-progress-label">Description</div>
                <div class="form-progress-label">Images</div>
            </div>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h2 class="mb-0">
                <i class="bi bi-house-add me-2"></i>Create a New Listing
            </h2>
        </div>
        <div class="card-body">
            <!-- Section Help Box -->
            <div class="section-help mb-4">
                <div class="section-help-title"><i class="bi bi-info-circle"></i>About This Form</div>
                <p class="section-help-content">
                    This form allows you to create a new property listing. Fill out all required information about your property, 
                    including location, details, description, and images. The more complete your listing, the more attractive it will be to potential buyers.
                </p>
            </div>
            <form action="/listings" method="POST" enctype="multipart/form-data">
                <!-- Address Section -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h4 class="mb-0">Property Location</h4>
                    </div>
                    <div class="card-body">
                        <div class="form-floating mb-3">
                            <input type="text" id="autocomplete" class="form-control" name="address" autocomplete="new-address" required>
                            <label for="autocomplete">Street Address</label>
                        </div>
                        <div class="row g-3">
                            <div class="col-md-6">
                                <div class="form-floating">
                                    <input type="text" id="city" class="form-control" name="city" autocomplete="new-city" required>
                                    <label for="city">City</label>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-floating">
                                    <input type="text" id="state" class="form-control" name="state" autocomplete="new-state" required>
                                    <label for="state">State</label>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-floating">
                                    <input type="number" id="zip" class="form-control" name="zip" autocomplete="new-zip" required>
                                    <label for="zip">ZIP Code</label>
                                </div>
                            </div>
                        </div>
                        <div class="form-floating mt-3">
                            <input type="text" id="county" class="form-control" name="county" autocomplete="new-county" required>
                            <label for="county">County</label>
                        </div>
                    </div>
                </div>

                <!-- Property Details Section -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h4 class="mb-0">Property Details</h4>
                    </div>
                    <div class="card-body">
                        <div class="form-floating mb-3">
                            <input type="number" id="price" class="form-control" name="price" required>
                            <label for="price">Price ($)</label>
                            <span class="tooltip-container">
                                <i class="bi bi-question-circle tooltip-icon"></i>
                                <span class="tooltip-text">Set a competitive price based on comparable properties in your area. Consider recent sales, property condition, and market trends.</span>
                            </span>
                        </div>
                        <div class="row g-3">
                            <div class="col-md-6">
                                <div class="form-floating">
                                    <input type="number" id="bedrooms" class="form-control" name="bedrooms" required>
                                    <label for="bedrooms">Bedrooms</label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-floating">
                                    <input type="number" id="bathrooms" class="form-control" name="bathrooms" required>
                                    <label for="bathrooms">Bathrooms</label>
                                </div>
                            </div>
                        </div>
                        <div class="form-floating mt-3">
                            <input type="number" id="squareFootage" class="form-control" name="squareFootage" required>
                            <label for="squareFootage">Square Footage</label>
                        
                            <!-- Measurement Source Options -->
                            <div class="mt-2 p-2 bg-light border rounded">
                                <p class="mb-1 fw-bold">Source of Square Footage Measurement:</p>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="priorAppraisal" name="measurementSource" value="priorAppraisal">
                                    <label class="form-check-label" for="priorAppraisal">Prior appraisal</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="buildingPlans" name="measurementSource" value="buildingPlans">
                                    <label class="form-check-label" for="buildingPlans">Building Plans</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="assessor" name="measurementSource" value="assessor">
                                    <label class="form-check-label" for="assessor">Assessor's Office</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="otherSource" name="measurementSource" value="other">
                                    <label class="form-check-label" for="otherSource">Other</label>
                                    <input type="text" class="form-control form-control-sm mt-1" id="otherSourceText" name="otherSourceText" placeholder="Please specify" style="display: none;">
                                </div>
                            </div>
                        </div>

                        <div class="row g-3 mt-3">
                            <div class="col-md-6">
                                <div class="form-floating">
                                    <select class="form-select form-control" id="propertyType" name="propertyType" required>
                                        <option value="">Property Type</option>
                                        <option value="single_family">Single-Family Home</option>
                                        <option value="condominium">Condominium</option>
                                        <option value="townhouse">Townhouse</option>
                                        <option value="duplex">Duplex</option>
                                        <option value="land">Land</option>
                                    </select>
                                    <label for="propertyType">Property Type</label>
                                    <span class="tooltip-container">
                                        <i class="bi bi-question-circle tooltip-icon"></i>
                                        <span class="tooltip-text">
                                            <strong>Single-Family:</strong> Standalone structure for one family<br>
                                            <strong>Condominium:</strong> Unit in a shared building with HOA fees<br>
                                            <strong>Townhouse:</strong> Multi-floor home sharing walls with adjacent units<br>
                                            <strong>Duplex:</strong> Building with two separate units<br>
                                            <strong>Land:</strong> Undeveloped property without structures
                                        </span>
                                    </span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-floating">
                                    <input type="number" id="acres" class="form-control" step="0.01" name="acres" required>
                                    <label for="acres">Acres</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Description Section -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h4 class="mb-0">Property Description</h4>
                    </div>
                    <div class="card-body">
                        <!-- Section Help Box -->
                        <div class="section-help mb-3">
                            <div class="section-help-title"><i class="bi bi-info-circle"></i>Writing an Effective Description</div>
                            <p class="section-help-content">
                                A compelling description can significantly increase buyer interest. Include:
                                <ul>
                                    <li>Key selling points and unique features</li>
                                    <li>Recent upgrades or renovations</li>
                                    <li>Neighborhood amenities and benefits</li>
                                    <li>Special views or natural features</li>
                                    <li>Energy-efficient features</li>
                                </ul>
                                Avoid using all caps, excessive punctuation, or discriminatory language.
                            </p>
                        </div>
                        
                        <div class="form-floating">
                            <textarea id="description" class="form-control" name="description" style="height: 150px" required></textarea>
                            <label for="description">Describe your property in detail</label>
                        </div>
                    </div>
                </div>

                <!-- Image Upload Section -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h4 class="mb-0">Property Images</h4>
                    </div>
                    <div class="card-body">
                        <!-- Section Help Box -->
                        <div class="section-help mb-3">
                            <div class="section-help-title"><i class="bi bi-info-circle"></i>Property Photography Tips</div>
                            <p class="section-help-content">
                                Quality photos significantly increase buyer interest. For best results:
                                <ul>
                                    <li>Use landscape orientation for all photos</li>
                                    <li>Take photos during daylight hours with lights on</li>
                                    <li>Ensure rooms are clean and decluttered</li>
                                    <li>Include photos of all main rooms and outdoor spaces</li>
                                    <li>Choose a front exterior shot for your primary image</li>
                                </ul>
                                High-quality images can increase views by up to 40%.
                            </p>
                        </div>
                        
                        <div class="mb-3">
                            <label for="image" class="form-label">Upload Primary Image</label>
                            <input type="file" id="image" name="image" class="form-control" accept="image/*">
                            <small class="text-muted">This will be the main image shown in search results</small>
                        </div>
                        <div class="mb-3">
                            <label for="images" class="form-label">Upload Additional Images (optional)</label>
                            <input type="file" id="images" name="images" class="form-control" accept="image/*" multiple>
                            <small class="text-muted">Select multiple files to upload (up to 20 images)</small>
                        </div>
                    </div>
                </div>
                <!-- Measurement Disclaimer Acknowledgment -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h4 class="mb-0">Measurement Disclaimer</h4>
                    </div>
                    <div class="card-body">
                        <div class="alert alert-info alert-persistent">
                            <div class="alert-title">Important Measurement Disclaimer</div>
                            <p class="alert-content">Any measurements information shared has not been independently verified and is for marketing purposes only. Measurements are approximations and may not be exact. Measurements are not to be relied upon for the purpose of a loan, valuation, or any other purpose.</p>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="measurementAcknowledgment" name="measurementAcknowledgment" required>
                            <label class="form-check-label" for="measurementAcknowledgment">
                                I acknowledge that all measurements provided are approximations from the selected sources and not independently verified by Brokerless. Exact square footage or acreage should be independently measured by interested buyers.
                            </label>
                        </div>
                    </div>
                </div>
                <!-- Submit Button -->
                <button type="submit" class="btn btn-primary w-100 py-2">
                    <i class="bi bi-plus-circle me-2"></i>Create Listing
                </button>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Show/hide the Other source text field
        document.getElementById('otherSource').addEventListener('change', function() {
            document.getElementById('otherSourceText').style.display = this.checked ? 'block' : 'none';
        });
        
        // Progress indicator functionality
        const formSections = [
            document.querySelector('.card:nth-of-type(1)'), // Location
            document.querySelector('.card:nth-of-type(2)'), // Details
            document.querySelector('.card:nth-of-type(3)'), // Description
            document.querySelector('.card:nth-of-type(4)')  // Images
        ];
        
        const progressSteps = document.querySelectorAll('.form-progress-step');
        const progressLabels = document.querySelectorAll('.form-progress-label');
        const progressBar = document.querySelector('.form-progress-bar');
        
        // Function to update progress indicator
        function updateProgress(step) {
            // Update data attribute
            progressBar.setAttribute('data-current-step', step);
            
            // Update active classes
            progressSteps.forEach((stepEl, index) => {
                if (index < step) {
                    stepEl.classList.add('active');
                } else {
                    stepEl.classList.remove('active');
                }
            });
            
            progressLabels.forEach((labelEl, index) => {
                if (index < step) {
                    labelEl.classList.add('active');
                } else {
                    labelEl.classList.remove('active');
                }
            });
        }
        
        // Track scroll position to update progress indicator
        window.addEventListener('scroll', function() {
            const scrollPosition = window.scrollY + 200; // Offset to trigger earlier
            
            // Determine which section is currently in view
            for (let i = formSections.length - 1; i >= 0; i--) {
                if (formSections[i] && formSections[i].offsetTop <= scrollPosition) {
                    updateProgress(i + 1);
                    break;
                }
            }
        });
        
        // Initial progress update
        updateProgress(1);
    });
</script>

<!-- Google Places Autocomplete Script (keep existing script) -->
<script>
        // Modified Google Places Autocomplete Script
        function initAutocomplete() {
        var input = document.getElementById("autocomplete");
        
        if (!input) {
            console.error("Google Places Autocomplete input field not found");
            return;
        }
        
        // Prevent browser's default autocomplete from interfering
        input.setAttribute("autocomplete", "new-address");
        
        // Initialize Google Places Autocomplete
        var autocomplete = new google.maps.places.Autocomplete(input, { 
            types: ['geocode'],
            componentRestrictions: { country: 'us' } // Restrict to US addresses only
        });
        
        // Handle place selection
        autocomplete.addListener('place_changed', function() {
            // Get the place details
            var place = autocomplete.getPlace();
            
            // Validate place has components
            if (!place || !place.address_components) {
                console.error("Invalid place selected or missing address components");
                return;
            }
            
            console.log("Selected place:", place);
            
            // Initialize variables for address components
            var streetNumber = '';
            var route = '';
            var city = '';
            var state = '';
            var zip = '';
            var county = '';
            
            // Extract address components
            place.address_components.forEach(function(component) {
                var types = component.types;
                
                // Street number
                if (types.includes('street_number')) {
                    streetNumber = component.long_name;
                }
                
                // Street name
                if (types.includes('route')) {
                    route = component.long_name;
                }
                
                // City
                if (types.includes('locality')) {
                    city = component.long_name;
                }
                
                // State
                if (types.includes('administrative_area_level_1')) {
                    state = component.short_name;
                }
                
                // ZIP code
                if (types.includes('postal_code')) {
                    zip = component.long_name;
                }
                
                // County
                if (types.includes('administrative_area_level_2')) {
                    county = component.long_name;
                }
            });
            
            // Combine street number and route for complete street address
            var address = (streetNumber ? streetNumber + ' ' : '') + route;
            
            // Clean up county name (remove the word "County" if present)
            if (county) {
                county = county.replace(/ County$/i, '');
                console.log("Found county:", county);
            }
            
            // Use reverse geocoding as fallback if county is missing
            if (!county && place.geometry && place.geometry.location) {
                var lat = place.geometry.location.lat();
                var lng = place.geometry.location.lng();
                
                console.log("County not found in address components, attempting reverse geocoding");
                
                var geocoder = new google.maps.Geocoder();
                geocoder.geocode({
                    'location': {lat: lat, lng: lng}
                }, function(results, status) {
                    if (status === 'OK' && results[0]) {
                        console.log("Reverse geocoding results:", results);
                        
                        // Look for county in reverse geocoding results
                        for (var i = 0; i < results.length; i++) {
                            var result = results[i];
                            
                            for (var j = 0; j < result.address_components.length; j++) {
                                var component = result.address_components[j];
                                
                                if (component.types.includes('administrative_area_level_2')) {
                                    county = component.long_name.replace(/ County$/i, '');
                                    console.log("County from reverse geocoding:", county);
                                    document.getElementById('county').value = county;
                                    break;
                                }
                            }
                            
                            if (county) break;
                        }
                    } else {
                        console.error("Reverse geocoding failed:", status);
                    }
                });
            }
            
            // Check for any missing required fields
            if (!address) console.warn("Street address not found in place data");
            if (!city) console.warn("City not found in place data");
            if (!state) console.warn("State not found in place data");
            if (!zip) console.warn("ZIP code not found in place data");
            if (!county) console.warn("County not found in place data");
            
            // Update form fields
            document.getElementById('autocomplete').value = address;
            document.getElementById('city').value = city;
            document.getElementById('state').value = state;
            document.getElementById('zip').value = zip;
            document.getElementById('county').value = county;
            
            // Store coordinates for potential use later
            if (place.geometry && place.geometry.location) {
                // You could add hidden fields for these if needed
                console.log("Coordinates:", {
                    lat: place.geometry.location.lat(),
                    lng: place.geometry.location.lng()
                });
            }
        });
    }
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= googleMapsApiKey %>&libraries=places&callback=initAutocomplete" async defer></script>

<%- include('../partials/footer.ejs') %>
