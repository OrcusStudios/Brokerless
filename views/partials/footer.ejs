<footer class="footer bg-dark text-light py-3">
    <div class="container">
        <div class="row align-items-center">
            <!-- Navigation Links -->
            <div class="col-md-4 small">
                <a href="/" class="text-light me-2">Home</a>
                <a href="/listings" class="text-light me-2">Listings</a>
                <a href="/lenderDirectory" class="text-light me-2">Lenders</a>
            </div>
            
            <!-- Copyright -->
            <div class="col-md-4 text-center small">
                <p class="mb-0">&copy; <%= new Date().getFullYear() %> RE-Marketplace</p>
            </div>
            
            <!-- Social Media Links -->
            <div class="col-md-4 text-md-end">
                <a href="https://facebook.com" class="text-light me-2" target="_blank" aria-label="Facebook">
                    <i class="bi bi-facebook"></i>
                </a>
                <a href="https://twitter.com" class="text-light me-2" target="_blank" aria-label="Twitter">
                    <i class="bi bi-twitter"></i>
                </a>
                <a href="https://instagram.com" class="text-light me-2" target="_blank" aria-label="Instagram">
                    <i class="bi bi-instagram"></i>
                </a>
                <a href="https://linkedin.com" class="text-light" target="_blank" aria-label="LinkedIn">
                    <i class="bi bi-linkedin"></i>
                </a>
            </div>
        </div>
    </div>
</footer>

    <!-- Messaging JS -->
    <script src="/js/messaging.js"></script>
    
    <!-- Form Guidance JS -->
    <script src="/js/form-guidance.js"></script>
    
    <!-- Offer Tasks JS -->
    <script src="/js/offerTasks.js"></script>

    <script>
        // Automatically remove non-persistent flash messages after 5 seconds
        document.addEventListener('DOMContentLoaded', () => {
            setTimeout(() => {
                // Only select alerts that don't have the alert-persistent class
                const alerts = document.querySelectorAll('.alert:not(.alert-persistent)');
                alerts.forEach(alert => {
                    alert.classList.remove('show');
                    alert.classList.add('fade');
                    setTimeout(() => alert.remove(), 300);
                });
            }, 5000);
        });

        // IMPORTANT: Add this unified markAllAsRead function to layout.ejs
        // This will be used both by layout.ejs and footer.ejs to avoid conflicts
        function markAllAsRead() {
            fetch('/notifications/mark-all-read', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                // Hide notification badge
                const badge = document.getElementById('notification-badge');
                if (badge) badge.style.display = 'none';
                
                // Simply close the dropdown - next open will show updated state
                const dropdownToggle = document.getElementById('notificationDropdown');
                const dropdown = bootstrap.Dropdown.getInstance(dropdownToggle);
                if (dropdown) dropdown.hide();
            })
            .catch(error => console.error('Error marking notifications as read:', error));
        }

        // Ensure notification items mark as read on click
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.notification-item').forEach(item => {
                item.addEventListener('click', function() {
                    const id = this.getAttribute('data-id');
                    fetch(`/notifications/${id}/read`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' }
                    });
                });
            });

            // Attach event listener to mark-all-read button
            const markAllReadBtn = document.getElementById('mark-all-read-btn');
            if (markAllReadBtn) {
                markAllReadBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation(); // Prevent dropdown from closing
                    markAllAsRead();
                });
            }
        });
    </script>


</body>
</html>
